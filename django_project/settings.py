"""
Django settings for django_project project.

Generated by 'django-admin startproject' using Django 4.2.19.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--)yy9(#v(_+rp&b+2jl_w2ffxm_k2!1jvg!@6$6!s2a=xb82r9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
URL = "23247740bf1603.lhr.life"
BASE_URL = f"https://{URL}"

ALLOWED_HOSTS = ["localhost", "127.0.0.1", URL]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bpapp',
    'rest_framework',
    'mozilla_django_oidc',

]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',#load static files for gunicorn.
]


AUTHENTICATION_BACKENDS = (
    'mozilla_django_oidc.auth.OIDCAuthenticationBackend',
)

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"


CSRF_TRUSTED_ORIGINS = [
    f"{BASE_URL}",
    ]
CSRF_COOKIE_SECURE = True  # Ensure cookie is sent over HTTPS
CSRF_COOKIE_HTTPONLY = False  # Allow frontend JS to read CSRF token
CSRF_USE_SESSIONS = False  # Store CSRF token in a cookie instead of session


ROOT_URLCONF = 'django_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
    
]

WSGI_APPLICATION = 'django_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")  # Required for collectstatic



OIDC_RP_SIGN_ALGO = 'RS256'
OIDC_OP_JWKS_ENDPOINT ="https://app.meldrx.com/.well-known/openid-configuration/jwks"
OIDC_OP_AUTHORIZATION_ENDPOINT ="https://app.meldrx.com/connect/authorize"
OIDC_OP_TOKEN_ENDPOINT ="https://app.meldrx.com/connect/token"
OIDC_OP_USER_ENDPOINT ="https://app.meldrx.com/connect/userinfo"
LOGIN_REDIRECT_URL = f"{BASE_URL}/bpapp/dashboard"
LOGOUT_REDIRECT_URL = f"{BASE_URL}/bpapp/dashboard"
OIDC_USE_PKCE = 'True'
OIDC_STORE_ACCESS_TOKEN = 'True'

OIDC_RP_SCOPES = 'openid profile launch patient/*.* fhirUser'
OIDC_AUTHORITY = "https://app.meldrx.com/"
OIDC_CLIENT_ID = "8b2eac23c7c6415b9cca55abe431501f"
#OIDC_CLIENT_ID = "8a9c3cd033de49f2998a74369df478e3"
OIDC_CLIENT_SECRET = "40fF8oMvtF86aheT6tCGcYQLBF7rGS"
OIDC_REDIRECT_URI = f"{BASE_URL}/bpapp/callback"
OIDC_TOKEN_ENDPOINT =f"{OIDC_AUTHORITY}connect/token"
OIDC_USERINFO_ENDPOINT = f"{OIDC_AUTHORITY}userinfo"

